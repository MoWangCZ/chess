<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="341px" preserveAspectRatio="none" style="width:592px;height:341px;" version="1.1" viewBox="0 0 592 341" width="592px" zoomAndPan="magnify"><defs><filter height="300%" id="fk9472fj1g1he" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class Controller--><rect fill="#FEFECE" filter="url(#fk9472fj1g1he)" height="124.8281" id="Controller" style="stroke: #A80036; stroke-width: 1.5;" width="245" x="6" y="8"/><ellipse cx="93.75" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M96.7188,29.6406 Q96.1406,29.9375 95.5,30.0781 Q94.8594,30.2344 94.1563,30.2344 Q91.6563,30.2344 90.3281,28.5938 Q89.0156,26.9375 89.0156,23.8125 Q89.0156,20.6875 90.3281,19.0313 Q91.6563,17.375 94.1563,17.375 Q94.8594,17.375 95.5,17.5313 Q96.1563,17.6875 96.7188,17.9844 L96.7188,20.7031 Q96.0938,20.125 95.5,19.8594 Q94.9063,19.5781 94.2813,19.5781 Q92.9375,19.5781 92.25,20.6563 Q91.5625,21.7188 91.5625,23.8125 Q91.5625,25.9063 92.25,26.9844 Q92.9375,28.0469 94.2813,28.0469 Q94.9063,28.0469 95.5,27.7813 Q96.0938,27.5 96.7188,26.9219 L96.7188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="114.25" y="28.1543">Controller</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="250" y1="40" y2="40"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="48.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="26" y="54.2104">Board m_board</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="61.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="26" y="67.0151">bool m_whiteTurn</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="250" y1="73.6094" y2="73.6094"/><ellipse cx="17" cy="85.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="26" y="87.8198">Controller()</text><ellipse cx="17" cy="98.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="26" y="100.6245">Controller(Board, bool whiteTurn)</text><ellipse cx="17" cy="111.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="26" y="113.4292">void run()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="120.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="26" y="126.2339">std::pair&lt;Position,Position&gt; getMove()</text><!--class Board--><rect fill="#FEFECE" filter="url(#fk9472fj1g1he)" height="124.8281" id="Board" style="stroke: #A80036; stroke-width: 1.5;" width="295" x="286" y="8"/><ellipse cx="410.75" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M413.7188,29.6406 Q413.1406,29.9375 412.5,30.0781 Q411.8594,30.2344 411.1563,30.2344 Q408.6563,30.2344 407.3281,28.5938 Q406.0156,26.9375 406.0156,23.8125 Q406.0156,20.6875 407.3281,19.0313 Q408.6563,17.375 411.1563,17.375 Q411.8594,17.375 412.5,17.5313 Q413.1563,17.6875 413.7188,17.9844 L413.7188,20.7031 Q413.0938,20.125 412.5,19.8594 Q411.9063,19.5781 411.2813,19.5781 Q409.9375,19.5781 409.25,20.6563 Q408.5625,21.7188 408.5625,23.8125 Q408.5625,25.9063 409.25,26.9844 Q409.9375,28.0469 411.2813,28.0469 Q411.9063,28.0469 412.5,27.7813 Q413.0938,27.5 413.7188,26.9219 L413.7188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="37" x="431.25" y="28.1543">Board</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="287" x2="580" y1="40" y2="40"/><ellipse cx="297" cy="51.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="139" x="306" y="54.2104">final const int ROW_SIZE</text><line style="stroke: #000000; stroke-width: 1.0;" x1="306" x2="445" y1="56.2104" y2="56.2104"/><ellipse cx="297" cy="64.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="137" x="306" y="67.0151">final const int COL_SIZE</text><line style="stroke: #000000; stroke-width: 1.0;" x1="306" x2="443" y1="69.0151" y2="69.0151"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="294" y="74.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="306" y="79.8198">std::vector&lt;std::shared_ptr&lt;Piece&gt;&gt; m_board</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="287" x2="580" y1="86.4141" y2="86.4141"/><ellipse cx="297" cy="98.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="306" y="100.6245">Board()</text><ellipse cx="297" cy="111.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="306" y="113.4292">void movePiece(Position start, Position end)</text><ellipse cx="297" cy="123.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="306" y="126.2339">std::string print()</text><!--class Position--><rect fill="#FEFECE" filter="url(#fk9472fj1g1he)" height="137.6328" id="Position" style="stroke: #A80036; stroke-width: 1.5;" width="198" x="29.5" y="193"/><ellipse cx="99.25" cy="209" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M102.2188,214.6406 Q101.6406,214.9375 101,215.0781 Q100.3594,215.2344 99.6563,215.2344 Q97.1563,215.2344 95.8281,213.5938 Q94.5156,211.9375 94.5156,208.8125 Q94.5156,205.6875 95.8281,204.0313 Q97.1563,202.375 99.6563,202.375 Q100.3594,202.375 101,202.5313 Q101.6563,202.6875 102.2188,202.9844 L102.2188,205.7031 Q101.5938,205.125 101,204.8594 Q100.4063,204.5781 99.7813,204.5781 Q98.4375,204.5781 97.75,205.6563 Q97.0625,206.7188 97.0625,208.8125 Q97.0625,210.9063 97.75,211.9844 Q98.4375,213.0469 99.7813,213.0469 Q100.4063,213.0469 101,212.7813 Q101.5938,212.5 102.2188,211.9219 L102.2188,214.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="119.75" y="213.1543">Position</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="30.5" x2="226.5" y1="225" y2="225"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="37.5" y="233.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="49.5" y="239.2104">int m_x</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="37.5" y="246.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="49.5" y="252.0151">int m_y</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="30.5" x2="226.5" y1="258.6094" y2="258.6094"/><ellipse cx="40.5" cy="270.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="49.5" y="272.8198">Position()</text><ellipse cx="40.5" cy="283.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="49.5" y="285.6245">Position(int x, int y)</text><ellipse cx="40.5" cy="296.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="49.5" y="298.4292">operator=( const Piece&amp; rhs )</text><ellipse cx="40.5" cy="308.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="49.5" y="311.2339">int getX()</text><ellipse cx="40.5" cy="321.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="49.5" y="324.0386">int getY()</text><!--link Controller to Board--><!--link Controller to Position--><!--
@startuml mainClassDiagram
class Controller {
  + Controller()
  + Controller(Board, bool whiteTurn)
  + void run()
  - std::pair<Position,Position> getMove()
  - Board m_board
  - bool m_whiteTurn
}

class Board {
  + Board()
  + void movePiece(Position start, Position end)
  + std::string print()
  + {static} final const int ROW_SIZE
  + {static} final const int COL_SIZE
  - std::vector<std::shared_ptr<Piece>> m_board
}

class Position {
  + Position()
  + Position(int x, int y)
  + operator=( const Piece& rhs )
  + int getX()
  + int getY()
  - int m_x
  - int m_y
}
@enduml

PlantUML version 1.2018.13(Mon Nov 26 09:11:51 PST 2018)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.8+10-post-Ubuntu-0ubuntu120.04
Operating System: Linux
OS Version: 4.19.104-microsoft-standard
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>